name: Micro-service deploy to STAGING

on:
  workflow_call:

jobs:
  func-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: caller_repository
    steps:
      - name: Checkout Caller Repository
        uses: actions/checkout@v3
        with:
          path: caller_repository

      - name: Checkout Workflows Repository
        uses: actions/checkout@v3
        with:
          repository: Cell-Ed/workflows
          path: workflows_repository

      - name: Define ENV VARS
        id: define_env
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_OUTPUT

      - name: Get faas-cli
        run: curl -sLSf https://cli.openfaas.com | sudo sh

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: 4.4
          mongodb-replica-set: rs0

      - name: Install mongoTools
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-database-tools

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_CI_CD_ACCESS_TOKEN}}" > .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Debug
        run: |
          pwd
          ls -lta
          cat package.json

      - name: Run Unit Tests
        run: npm test ./ -- --coverage

      - name: Pull template
        uses: actions/checkout@v2
        with:
          repository: Cell-Ed/openfaas-templates
          path: repo-templates
          token: ${{ secrets.ACTIONS_CI_CD_ACCESS_TOKEN }}
          ref: main

      - run: |
          cp -r ./caller_repository/repo-templates/template ./caller_repository/template
          rm -rf ./caller_repository/repo-templates

      - name: Run shrinkwrap build
        run: |
          faas-cli build -f ./services-learner-api.yml \
          --build-arg NPM_AUTH_TOKEN=${{ secrets.NPM_CI_CD_ACCESS_TOKEN }} --shrinkwrap

      - name: Login to OpenFaaS Gateway
        run: |
          faas-cli login -p ${{ secrets.OPENFAAS_GATEWAY_STAGING_PASSWD }} \
          -g ${{ secrets.OPENFAAS_GATEWAY_STAGING }}

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push the OpenFaaS function
        uses: docker/build-push-action@v2
        with:
          context: ./caller_repository/build/services-learner-api/
          file: .caller_repository/build/services-learner-api/Dockerfile
          push: true
          tags: celled/services-learner-api:latest-${{ steps.define_env.outputs.GITHUB_SHA_SHORT }}
          build-args: |
            NPM_AUTH_TOKEN=${{ secrets.NPM_CI_CD_ACCESS_TOKEN }}

      - name: Deploy the function
        run: |
          faas-cli deploy -f ./caller_repository/services-learner-api.yml --tag sha --gateway ${{ secrets.OPENFAAS_GATEWAY_STAGING }}
        env:
          DOCKER_USER: celled

